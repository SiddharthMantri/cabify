{"version":3,"sources":["store/context.js","components/summary/index.js","components/shopping-cart/product-row.js","components/shopping-cart/product-list.js","components/shopping-cart/index.js","components/modal/index.js","components/app-wrapper/index.js","models/Checkout.js","models/BulkDiscount.js","models/FreeDiscount.js","models/Product.js","models/products.js","store/setup.js","store/provider.js","hooks/useCheckout.js","hooks/useModal.js","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","Summary","props","state","useContext","useState","itemCount","setItemCount","cart","undiscounted","grossTotal","appliedRules","useEffect","sum","Object","keys","reduce","next","qty","className","length","map","rule","index","key","savings","type","ProductRow","name","price","code","imgUrl","imgXlUrl","modal","setOpen","setData","scan","remove","addByQuantity","setQty","productInCart","handleUpdateQty","e","value","currentValue","parseInt","isNaN","contextQty","src","alt","onClick","pattern","onChange","intValue","target","validity","valid","onBlur","ProductList","products","p","i","ShoppingCart","Modal","modalContext","open","data","handleClose","style","padding","position","overflow","background","textAlign","cursor","AppWrapper","Checkout","initData","pricingRules","this","bind","scanProduct","updateCheckout","total","cartItem","product","discounted","calculateCurrentPrice","find","intQty","forEach","applyDiscount","assign","create","getPrototypeOf","BulkDiscount","quantity","discount","productList","item","clone","productsToCheck","originalPrice","discountedAmount","FreeDiscount","numDiscounted","Product","setup","Provider","children","checkout","internalCart","performUpdate","applyFunction","newState","newStateCart","setState","defaultState","updateByQty","useCheckout","useModal","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0394933a.chunk.js","sourcesContent":["import { createContext } from 'react';\nexport const Context = createContext();\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Context } from '../../store/context';\n\nconst Summary = props => {\n    const { state } = useContext(Context);\n    const [itemCount, setItemCount] = useState(0);\n    let { cart = {}, undiscounted = 0, grossTotal = 0, appliedRules = {} } = state;\n\n    useEffect(() => {\n        let sum = Object.keys(cart).reduce((sum, next) => cart[next] ? sum + cart[next].qty : 0, 0);\n        setItemCount(sum)\n    }, [state])\n\n    return (\n        <aside className=\"summary\">\n            <h1 className=\"main\">Order Summary</h1>\n            <ul className=\"summary-items wrapper border\">\n                <li>\n                    <span className=\"summary-items-number\">{itemCount} Items</span>\n                    <span className=\"summary-items-price\">{undiscounted}<span className=\"currency\">€</span></span>\n                </li>\n            </ul>\n            {Object.keys(appliedRules).length > 0 &&\n                <div className=\"summary-discounts wrapper-half border\">\n                    <h2>Discounts</h2>\n                    <ul>\n                        {Object.keys(appliedRules).map((rule, index) => (\n                            <li key={index}>\n                                <span>{rule}</span>\n                                <span>-{appliedRules[rule].savings}€</span>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            }\n            <div className=\"summary-total wrapper\">\n                <h1 className=\"summary-total-cost\">\n                    <span>Total Cost</span>\n                    <span className=\"summary-total-price\">{grossTotal}€</span>\n                </h1>\n                <button type=\"submit\">Checkout</button>\n            </div>\n        </aside>\n    )\n}\nexport default Summary;","import React, { useContext, useState, useEffect } from 'react';\nimport { Context } from '../../store/context';\n\n\nconst ProductRow = ({ name, price, code, imgUrl, imgXlUrl }) => {\n    const { state, modal: { setOpen = () => { }, setData = () => { } } } = useContext(Context);\n    let { scan, cart = {}, remove, addByQuantity } = state;\n    const [qty, setQty] = useState(0);\n    const productInCart = cart[code] ? cart[code] : {};\n\n    \n    const handleUpdateQty = type => e => {\n        let value = 0;\n        let currentValue = parseInt(qty);\n        if (!isNaN(currentValue)) {\n            if (type === 'reduce') {\n                value = parseInt(qty) <= 0 ? 0 : parseInt(qty) - 1;\n                remove(code);\n            } else {\n                value = parseInt(qty) + 1;\n                scan(code);\n            }\n        }\n        setQty(value);\n    }\n    const handleInputChange = e => {\n        let intValue = e.target.validity.valid ? e.target.value : qty;\n        addByQuantity(code, intValue);\n        setQty(intValue);\n    }\n    const handleBlur = e => {\n        if (e.target.value === \"\") {\n            setQty(0);\n        }\n    }\n    const handleModalClick = () => {\n        setOpen(true);\n        setData({ name, price, code, imgUrl, imgXlUrl });\n    }\n    useEffect(() => {\n        let contextQty = cart[code] ? cart[code].qty : 0;\n        setQty(contextQty);\n    }, [state])\n    return (\n        <li className=\"product row\">\n            <div className=\"col-product\">\n                <figure className=\"product-image\">\n                    <img src={imgUrl} alt={code} />\n                    <div className=\"product-description\">\n                        <h1 onClick={handleModalClick}>{name}</h1>\n                        <p className=\"product-code\">Product code {code}</p>\n                    </div>\n                </figure>\n            </div>\n            <div className=\"col-quantity\">\n                <button className=\"count\" onClick={handleUpdateQty('reduce')}>-</button>\n                <input type=\"text\" pattern={\"[0-9]{1,3}\"} className=\"product-quantity\" value={qty} onChange={handleInputChange} onBlur={handleBlur} />\n                <button className=\"count\" onClick={handleUpdateQty('increase')}>+</button>\n            </div>\n            <div className=\"col-price\">\n                <span className=\"product-price\">{price}</span>\n                <span className=\"product-currency currency\">€</span>\n            </div>\n            <div className=\"col-total\">\n                <span className=\"product-price\">{productInCart.undiscounted || 0}</span>\n                <span className=\"product-currency currency\">€</span>\n            </div>\n        </li>\n    )\n}\nexport default ProductRow;","import React, { useContext, Fragment } from 'react';\nimport { Context } from '../../store/context'\nimport ProductRow from './product-row';\n\nconst ProductList = props => {\n    const { state: { products = [] } } = useContext(Context);\n    return (\n        <Fragment>\n            <ul className=\"products-list tableHead\">\n                <li className=\"products-list-title row\">\n                    <div className=\"col-product\">Product details</div>\n                    <div className=\"col-quantity\">Quantity</div>\n                    <div className=\"col-price\">Price</div>\n                    <div className=\"col-total\">Total</div>\n                </li>\n            </ul>\n            <ul className=\"products-list\">\n                {products.map((p, i) => <ProductRow key={i} {...p} />)}\n            </ul>\n        </Fragment>\n    )\n}\nexport default ProductList;","import React from 'react';\nimport ProductList from './product-list';\n\n\n\nconst ShoppingCart = props => (\n    <section className=\"products\">\n        <h1 className=\"main\">Shopping cart</h1>        \n        <ProductList />\n    </section>\n)\nexport default ShoppingCart","import React, { Fragment, useContext } from 'react';\nimport { Context } from '../../store/context';\n\n\nconst Modal = props => {\n    let modalContext = useContext(Context);\n    let { modal: { open = false, data = {}, setOpen = () => { }, setData = () => { } }, state: { scan = () => { } } } = modalContext;\n\n    const handleClose = () => {\n        setOpen(false);\n        setData({});\n    }\n    const addToCart = () => {\n        scan(data.code);\n        handleClose();\n    }\n    return (\n        <Fragment>\n            <section className=\"products\" style={{ padding: \"0px\", position: \"relative\", overflow:\"hidden\" }}>\n                <img alt={data.name} src={data.imgXlUrl} className={'modal-image'}></img>\n            </section>\n            <aside className=\"summary\" style={{ background: \"#fff\" }}>\n                <div style={{ textAlign: \"right\", cursor: \"pointer\" }} onClick={handleClose}>\n                    x\n                </div>\n                <div className=\"product-detail-summary\">\n                    <div className=\"product-detail-box\">\n                        <h1 className=\"product-detail-text\">\n                            <span className=\"product-title\">\n                                {data.name}\n                            </span>\n                            <span className=\"product-price\">\n                                {data.price} €\n                            </span>\n                        </h1>\n                        <p className=\"product-detail-para\">\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n                            labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n                            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n                            cillum dolore eu fugiat nulla pariatur.\n                        </p>\n                        <p className=\"product-detail-code\">\n                            Product code {data.code}\n                        </p>\n                        <button onClick={addToCart} type=\"submit\">Add to cart</button>\n                    </div>\n                </div>\n            </aside>\n        </Fragment>\n    )\n}\nexport default Modal;","import React, { Fragment, useContext } from 'react';\nimport Summary from '../summary';\nimport ShoppingCart from '../shopping-cart';\nimport Modal from '../modal';\nimport { Context } from '../../store/context';\n\n\n\nconst AppWrapper = props => {\n    const { modal: { open = false } } = useContext(Context);\n    return (\n        <Fragment>\n            {!open ?\n                <Fragment>\n                    <ShoppingCart />\n                    <Summary />\n                </Fragment>:\n                <Modal />\n            }\n        </Fragment>\n    )\n}\nexport default AppWrapper;","class Checkout {\n    constructor(initData) {\n        let { pricingRules = [], products = [] } = initData;\n        this.cart = {};\n        this.products = [...products];\n        this.pricingRules = [...pricingRules];\n        this.appliedRules = {};\n        this.undiscounted = 0;\n        this.grossTotal = 0;\n        this.scan = this.scan.bind(this);\n        this.scanProduct = this.scanProduct.bind(this);\n        this.remove = this.remove.bind(this);\n        this.updateCheckout = this.updateCheckout.bind(this);\n        this.total = this.total.bind(this);\n        this.addByQuantity = this.addByQuantity.bind(this);\n    }\n    calculateCurrentPrice(cartItem) {\n        let { product, qty, undiscounted = 0, discounted = 0 } = cartItem;\n        let { price } = product;\n        undiscounted = price * qty;\n        discounted = price * qty;\n        return { product, qty, undiscounted, discounted };\n\n    }\n    scanProduct(product) {\n        if (this.cart[product.code]) {\n            this.cart[product.code].qty += 1;\n        } else {\n            this.cart[product.code] = {\n                product: { ...product },\n                qty: 1,\n            };\n        }\n        this.cart[product.code] = this.calculateCurrentPrice(this.cart[product.code]);\n        this.updateCheckout(this.cart);\n    }\n    scan(code = \"\") {\n        let product = this.products.find(p => p.code === code);\n        if (product) {\n            this.scanProduct({ ...product });\n        }\n        return this;\n    }\n    remove(code = \"\") {\n        let p = this.cart[code];\n        if (p && p.qty > 0) {\n            p.qty = p.qty - 1;\n            this.cart[code] = this.calculateCurrentPrice(this.cart[code]);\n        }\n        this.updateCheckout(this.cart);\n    }\n    addByQuantity(code, qty) {\n        qty = qty !== \"\" ? qty : 0;\n        let intQty = parseInt(qty);\n        let product = this.products.find(p => p.code === code);\n        if (this.cart[code]) {\n            this.cart[code].qty = intQty;\n            this.cart[code].undiscounted = product.price * intQty;\n        } else {\n            this.cart[code] = {\n                product: { ...product },\n                qty: qty,\n                undiscounted: product.price * intQty\n            };\n        }\n        this.cart[code] = this.calculateCurrentPrice(this.cart[code]);\n        this.updateCheckout(this.cart);\n    }\n\n    updateCheckout(cart) {\n        this.pricingRules.forEach(rule => {\n            rule.applyDiscount(cart, this.appliedRules);\n        });\n        this.cart = cart;\n        this.grossTotal = Object.keys({ ...cart }).reduce((sum, next) => cart[next] ? sum + cart[next].discounted : 0, 0);\n        this.undiscounted = Object.keys({ ...cart }).reduce((sum, next) => cart[next] ? sum + cart[next].undiscounted : 0, 0)\n        let clone = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        return clone;\n    }\n    total() {\n        return this.grossTotal;\n    }\n}\nexport default Checkout;\n","class BulkDiscount {\n    constructor(code, quantity, discount, productList) {\n        this.code = code;\n        this.quantity = quantity;\n        this.discount = discount;\n        this.products = productList;\n        this.name = `x${this.quantity} ${this.code} Offer`;\n    }\n\n    getOriginalProductPrice(code) {\n        let product = this.products.find(item => item.code === code);\n        return product.price;\n    }\n\n    applyDiscount(cart = {}, appliedRules = {}) {\n        let clone = { ...cart };\n        let productsToCheck = clone[this.code];\n        if (productsToCheck) {\n            let originalPrice = productsToCheck.product.price * productsToCheck.qty;\n            let discount = productsToCheck.product.price * productsToCheck.qty;\n            if (productsToCheck && productsToCheck.qty >= this.quantity) {\n                let discountedAmount = productsToCheck.qty * this.discount;\n                discount = originalPrice - discountedAmount;\n                appliedRules[this.name] = {\n                    discount: discount,\n                    savings: originalPrice - discount\n                };\n            }else if(productsToCheck && productsToCheck.qty < this.quantity){\n                delete appliedRules[this.name];\n            }\n            clone[this.code].discounted = discount;\n            clone[this.code].undiscounted = originalPrice;\n        }\n    }\n}\nexport default BulkDiscount;\n","class FreeDiscount {\n\tconstructor(code, quantity) {\n\t\tthis.code = code;\n\t\tthis.quantity = quantity;\n\t\tthis.name = `${this.quantity}x1 Free`;\n\t}\n\n\tapplyDiscount(cart = {}, appliedRules) {\n\t\tlet clone = { ...cart };\n\t\tlet productsToCheck = clone[this.code];\n\t\tlet discounted = 0;\n\t\tlet price =\n\t\t\tproductsToCheck && productsToCheck.product\n\t\t\t\t? productsToCheck.product.price\n\t\t\t\t: 0;\n\t\tlet undiscounted = productsToCheck ? price * productsToCheck.qty : 0;\n\t\tlet numDiscounted = 0;\n\t\tlet qty = productsToCheck ? productsToCheck.qty : 0;\n\t\tif (productsToCheck && qty > this.quantity) {\n\t\t\tfor (let i = this.quantity; i < qty; i = i + this.quantity + 1) {\n\t\t\t\tnumDiscounted += 1;\n\t\t\t}\n\t\t}\n\t\tdiscounted = undiscounted - price * numDiscounted;\n\t\tif (productsToCheck && qty > this.quantity) {\n\t\t\tproductsToCheck.undiscounted = undiscounted;\n\t\t\tproductsToCheck.discounted = discounted;\n\t\t\tlet savings = undiscounted - discounted;\n\t\t\tappliedRules[this.name] = {\n\t\t\t\tundiscounted,\n\t\t\t\tdiscounted,\n\t\t\t\tsavings\n\t\t\t};\n\t\t}else if(productsToCheck && qty <= this.quantity){\n\t\t\tdelete appliedRules[this.name];\n\t\t}\n\t}\n}\nexport default FreeDiscount;\n","class Product {\n    constructor(code, name, price, imgUrl, imgXlUrl) {\n        this.code = code;\n        this.name = name;\n        this.price = price;\n        this.imgUrl = imgUrl;\n        this.imgXlUrl = imgXlUrl;\n    }\n}\nexport default Product;","import Product from \"./Product\";\n\nexport const products = [\n\tnew Product(\"X7R2OPX\", \"Cabify T-Shirt\", 20.0, '/img/shirt.png', '/img/tshirt2x.jpg'),\n\tnew Product(\"X2G2OPZ\", \"Cabify Coffee Mug\", 7.5, '/img/mug.png', '/img/mug.png'),\n\tnew Product(\"X3W2OPY\", \"Cabify Cap\", 5.0, '/img/cap.png', '/img/cap.png')\n];\n\n","import BulkDiscount from \"../models/BulkDiscount\";\nimport FreeDiscount from \"../models/FreeDiscount\";\nimport { products } from \"../models/products\";\n\nconst bulkRule = new BulkDiscount(\"X7R2OPX\", 3, 1, products);\nconst twoRule = new FreeDiscount(\"X3W2OPY\", 2);\n\nexport const setup = {\n    pricingRules: [bulkRule, twoRule],\n    products\n}\n","import React, { useEffect } from 'react';\nimport { useCheckout } from '../hooks/useCheckout';\nimport { Context } from './context';\nimport { setup } from './setup';\nimport { useModal } from '../hooks/useModal';\n\n\n\n\n\nconst Provider = ({ children }) => {\n    const { state } = useCheckout(setup);\n    let { scan = () => { } } = state;\n    const [open, data, setOpen, setData] = useModal();\n    let modal = { open, data, setOpen, setData };\n    useEffect(() => {\n        scan('X7R2OPX');\n        scan('X7R2OPX');\n        scan('X7R2OPX');\n        scan('X2G2OPZ');\n        scan('X2G2OPZ');\n        scan('X2G2OPZ');\n        scan('X2G2OPZ');\n        scan('X3W2OPY');\n        scan('X3W2OPY');\n        scan('X3W2OPY');\n        scan('X3W2OPY');\n    }, [])    \n    return (\n        <Context.Provider value={{ state, modal }}>\n            {children}\n        </Context.Provider>\n    );\n};\n\nexport default Provider;","import { useState } from \"react\";\nimport Checkout from \"../models/Checkout\";\n\nexport const useCheckout = (initData = {}) => {\n    const checkout = new Checkout(initData);\n    const {\n        cart = {},\n        internalCart = {},\n        products = {},\n        pricingRules = {},\n        appliedRules = {},\n        grossTotal = 0,\n        scan = () => { },\n        total = () => { },\n        updateCheckout = () => { },\n        undiscounted,\n        addByQuantity,\n        remove\n    } = checkout;\n    const performUpdate = applyFunction => item => {\n        applyFunction(item);\n        let newState = updateCheckout(cart);\n        let { cart: newStateCart, undiscounted } = newState;\n        setState({\n            ...defaultState,\n            cart: newStateCart,\n            grossTotal: newState.grossTotal,\n            appliedRules: newState.appliedRules,\n            total: newState.total,\n            undiscounted\n        });\n    };\n    const updateByQty = applyFunction => (item, qty) => {\n        applyFunction(item, qty);\n        let newState = updateCheckout(cart);\n        let { cart: newStateCart, undiscounted } = newState;\n        setState({\n            ...defaultState,\n            cart: newStateCart,\n            grossTotal: newState.grossTotal,\n            appliedRules: newState.appliedRules,\n            total: newState.total,\n            undiscounted,\n        });\n    };\n    const defaultState = {\n        cart,\n        internalCart,\n        products,\n        pricingRules,\n        appliedRules,\n        grossTotal,\n        scan: performUpdate(scan),\n        undiscounted,\n        addByQuantity: updateByQty(addByQuantity),\n        remove: performUpdate(remove)\n    };\n\n    let [state, setState] = useState(defaultState);\n\n    return { state };\n};\n","import { useState } from \"react\";\n\nexport const useModal = () => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n    return [open, data, setOpen, setData];\n}","import React from 'react';\nimport './App.css';\nimport AppWrapper from './components/app-wrapper';\nimport Provider from './store/provider';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Provider>\n\t\t\t\t<AppWrapper />\n\t\t\t</Provider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './main.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}